{"version":3,"sources":["grid-layout.js"],"names":["$","EdumallGridPlugin","$el","options","this","_isotopeOptions","itemSelector","percentPosition","transitionDuration","packery","columnWidth","fitRows","gutter","init","resizeTimer","plugin","$grid","find","settings","data","length","type","$edumall","isRTL","originLeft","layoutMode","imagesLoaded","calculateMasonrySize","children","matchHeight","isotope","addClass","one","handlerEntranceAnimation","handlerTooltips","window","on","clearTimeout","setTimeout","event","el","$items","update","append","always","windowWidth","innerWidth","$gridWidth","getBoundingClientRect","width","$column","$gutter","$zigzagHeight","lgGutter","undefined","mdGutter","gutterTablet","smGutter","gutterMobile","lgColumns","columns","mdColumns","columnsTablet","smColumns","columnsMobile","lgZigzagHeight","zigzagHeight","mdZigzagHeight","zigzagHeightTablet","smZigzagHeight","zigzagHeightMobile","zigzagReversed","tabletBreakPoint","mobileBreakPoint","elementorFrontendConfig","breakpoints","lg","md","attr","Math","floor","columnWidth2","columnHeight","css","columnHeight2","columnHeight7","columnHeight13","isMetro","ratioH","ratio","parseInt","each","index","gridItem","marginTop","marginBottom","$itemHeight","hasClass","height","elementorWaypoint","_self","element","offset","triggerOnce","tooltipSettings","powerTip","i","o","target","placement","popupClass","smartPlacement","mouseOnToPopup","fn","EdumallGridLayout","methodOrOptions","edumallGridLayouts","args","results","method","push","arguments","Array","prototype","slice","call","console","warn","info","result","apply","jQuery"],"mappings":"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","file":"../../grid-layout.min.js","sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\tvar EdumallGridPlugin = function( $el, options ) {\n\t\t\tthis._isotopeOptions = {\n\t\t\t\titemSelector: '.grid-item',\n\t\t\t\tpercentPosition: true,\n\t\t\t\ttransitionDuration: 0,\n\t\t\t\tpackery: {\n\t\t\t\t\tcolumnWidth: '.grid-sizer',\n\t\t\t\t},\n\t\t\t\tfitRows: {\n\t\t\t\t\tgutter: 10\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.init = function() {\n\t\t\t\tvar plugin = this;\n\t\t\t\tvar resizeTimer;\n\t\t\t\tvar $grid = $el.find( '.edumall-grid' );\n\n\t\t\t\tvar settings = $el.data( 'grid' );\n\n\t\t\t\tvar gridData;\n\n\t\t\t\tif ( $grid.length > 0 && settings && typeof settings.type !== 'undefined' ) {\n\t\t\t\t\tif ( $edumall.isRTL ) {\n\t\t\t\t\t\tplugin._isotopeOptions.originLeft = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'masonry' === settings.type || 'metro' === settings.type ) {\n\t\t\t\t\t\tplugin._isotopeOptions.layoutMode = 'packery';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplugin._isotopeOptions.layoutMode = 'fitRows';\n\t\t\t\t\t}\n\n\t\t\t\t\tgridData = $grid.imagesLoaded( function() {\n\t\t\t\t\t\tplugin.calculateMasonrySize();\n\t\t\t\t\t\tif ( 'grid' === settings.type ) {\n\t\t\t\t\t\t\t$grid.children( '.grid-item' ).matchHeight();\n\t\t\t\t\t\t\t$grid.isotope( 'layout' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$grid.addClass( 'loaded' );\n\t\t\t\t\t} );\n\n\t\t\t\t\tgridData.one( 'arrangeComplete', function() {\n\t\t\t\t\t\tplugin.handlerEntranceAnimation();\n\t\t\t\t\t\tplugin.handlerTooltips();\n\t\t\t\t\t} );\n\n\t\t\t\t\t$( window ).on( 'resize', function() {\n\t\t\t\t\t\tplugin.calculateMasonrySize();\n\n\t\t\t\t\t\t// Sometimes layout can be overlap. then re-cal layout one time.\n\t\t\t\t\t\tclearTimeout( resizeTimer );\n\t\t\t\t\t\tresizeTimer = setTimeout( function() {\n\t\t\t\t\t\t\t// Run code here, resizing has \"stopped\"\n\t\t\t\t\t\t\tplugin.calculateMasonrySize();\n\t\t\t\t\t\t}, 500 ); // DO NOT decrease the time. Sometime, It'll make layout overlay on resize.\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\t$grid.addClass( 'loaded' );\n\t\t\t\t\tplugin.handlerEntranceAnimation();\n\t\t\t\t\tplugin.handlerTooltips();\n\t\t\t\t}\n\n\t\t\t\t$el.on( 'EdumallQueryEnd', function( event, el, $items ) {\n\t\t\t\t\tplugin.update( $items );\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\tthis.update = function( $items ) {\n\t\t\t\tvar plugin = this;\n\t\t\t\tvar settings = $el.data( 'grid' );\n\t\t\t\tvar $grid = $el.children( '.edumall-grid' );\n\n\t\t\t\tif ( $grid.length > 0 && settings && typeof settings.type !== 'undefined' ) {\n\t\t\t\t\t$grid.isotope()\n\t\t\t\t\t     .append( $items )\n\t\t\t\t\t     .isotope( 'reloadItems', $items )\n\t\t\t\t\t     .imagesLoaded()\n\t\t\t\t\t     .always( function() {\n\t\t\t\t\t\t     $items.addClass( 'animate' );\n\t\t\t\t\t\t     plugin.calculateMasonrySize( plugin._isotopeOptions );\n\t\t\t\t\t\t     if ( 'grid' === settings.type ) {\n\t\t\t\t\t\t\t     $grid.children( '.grid-item' ).matchHeight();\n\t\t\t\t\t\t\t     $grid.isotope( 'layout' );\n\t\t\t\t\t\t     }\n\t\t\t\t\t     } );\n\t\t\t\t} else {\n\t\t\t\t\t$grid.append( $items ).imagesLoaded().always( function() {\n\t\t\t\t\t\t$items.addClass( 'animate' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.calculateMasonrySize = function() {\n\t\t\t\tvar plugin = this;\n\t\t\t\tvar $grid = $el.children( '.edumall-grid' );\n\n\t\t\t\tvar windowWidth    = window.innerWidth,\n\t\t\t\t    $gridWidth     = $grid[ 0 ].getBoundingClientRect().width,\n\t\t\t\t    $column        = 1,\n\t\t\t\t    $gutter        = 0,\n\t\t\t\t    $zigzagHeight  = 0,\n\t\t\t\t    settings       = $el.data( 'grid' ),\n\t\t\t\t    lgGutter       = settings.gutter !== undefined ? settings.gutter : 0,\n\t\t\t\t    mdGutter       = settings.gutterTablet !== undefined ? settings.gutterTablet : lgGutter,\n\t\t\t\t    smGutter       = settings.gutterMobile !== undefined ? settings.gutterMobile : mdGutter,\n\t\t\t\t    lgColumns      = settings.columns !== undefined ? settings.columns : 1,\n\t\t\t\t    mdColumns      = settings.columnsTablet !== undefined ? settings.columnsTablet : lgColumns,\n\t\t\t\t    smColumns      = settings.columnsMobile !== undefined ? settings.columnsMobile : mdColumns,\n\t\t\t\t    lgZigzagHeight = settings.zigzagHeight !== undefined ? settings.zigzagHeight : 0,\n\t\t\t\t    mdZigzagHeight = settings.zigzagHeightTablet !== undefined ? settings.zigzagHeightTablet : lgZigzagHeight,\n\t\t\t\t    smZigzagHeight = settings.zigzagHeightMobile !== undefined ? settings.zigzagHeightMobile : mdZigzagHeight,\n\t\t\t\t    zigzagReversed = settings.zigzagReversed !== undefined && settings.zigzagReversed === 1 ? true : false;\n\n\t\t\t\tvar tabletBreakPoint = 1025;\n\t\t\t\tvar mobileBreakPoint = 768;\n\n\t\t\t\tif ( typeof elementorFrontendConfig !== 'undefined' ) {\n\t\t\t\t\ttabletBreakPoint = elementorFrontendConfig.breakpoints.lg;\n\t\t\t\t\tmobileBreakPoint = elementorFrontendConfig.breakpoints.md;\n\t\t\t\t}\n\n\t\t\t\tif ( windowWidth >= tabletBreakPoint ) {\n\t\t\t\t\t$column = lgColumns;\n\t\t\t\t\t$gutter = lgGutter;\n\t\t\t\t\t$zigzagHeight = lgZigzagHeight;\n\t\t\t\t} else if ( windowWidth >= mobileBreakPoint ) {\n\t\t\t\t\t$column = mdColumns;\n\t\t\t\t\t$gutter = mdGutter;\n\t\t\t\t\t$zigzagHeight = mdZigzagHeight;\n\t\t\t\t} else {\n\t\t\t\t\t$column = smColumns;\n\t\t\t\t\t$gutter = smGutter;\n\t\t\t\t\t$zigzagHeight = smZigzagHeight;\n\t\t\t\t}\n\n\t\t\t\t$el.attr( 'data-active-columns', $column );\n\n\t\t\t\tvar totalGutterPerRow = (\n\t\t\t\t\t                        $column - 1\n\t\t\t\t                        ) * $gutter;\n\n\t\t\t\tvar columnWidth = (\n\t\t\t\t\t                  $gridWidth - totalGutterPerRow\n\t\t\t\t                  ) / $column;\n\n\t\t\t\tcolumnWidth = Math.floor( columnWidth );\n\n\t\t\t\tvar columnWidth2 = columnWidth;\n\t\t\t\tif ( $column > 1 ) {\n\t\t\t\t\tcolumnWidth2 = columnWidth * 2 + $gutter;\n\t\t\t\t}\n\n\t\t\t\t$grid.children( '.grid-sizer' ).css( {\n\t\t\t\t\t'width': columnWidth + 'px'\n\t\t\t\t} );\n\n\t\t\t\tvar columnHeight   = 0,\n\t\t\t\t    columnHeight2  = 0, // 200%.\n\t\t\t\t    columnHeight7  = 0, // 70%.\n\t\t\t\t    columnHeight13 = 0, // 130%.\n\t\t\t\t    isMetro        = false,\n\t\t\t\t    ratioW         = 1,\n\t\t\t\t    ratioH         = 1;\n\n\t\t\t\tif ( settings.ratio ) {\n\t\t\t\t\tratioH = settings.ratio;\n\t\t\t\t\tisMetro = true;\n\t\t\t\t}\n\n\t\t\t\t// Calculate item height for only metro type.\n\t\t\t\tif ( isMetro ) {\n\t\t\t\t\tcolumnHeight = columnWidth * ratioH / ratioW;\n\t\t\t\t\tcolumnHeight = Math.floor( columnHeight );\n\n\t\t\t\t\tif ( $column > 1 ) {\n\t\t\t\t\t\tcolumnHeight2 = columnHeight * 2 + $gutter;\n\t\t\t\t\t\tcolumnHeight13 = parseInt( columnHeight * 1.3 );\n\t\t\t\t\t\tcolumnHeight7 = columnHeight2 - $gutter - columnHeight13;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolumnHeight2 = columnHeight7 = columnHeight13 = columnHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$grid.children( '.grid-item' ).each( function( index ) {\n\t\t\t\t\tvar gridItem = $( this );\n\n\t\t\t\t\t// Zigzag.\n\t\t\t\t\tif (\n\t\t\t\t\t\t$zigzagHeight > 0 // Has zigzag.\n\t\t\t\t\t\t&& $column > 1 // More than 1 column.\n\t\t\t\t\t\t&& index + 1 <= $column // On top items.\n\t\t\t\t\t) {\n\t\t\t\t\t\tif ( zigzagReversed === false ) { // Is odd item.\n\t\t\t\t\t\t\tif ( index % 2 === 0 ) {\n\t\t\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t\t\t'marginTop': $zigzagHeight + 'px'\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t\t\t'marginTop': '0px'\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ( index % 2 !== 0 ) {\n\t\t\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t\t\t'marginTop': $zigzagHeight + 'px'\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t\t\t'marginTop': '0px'\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t'marginTop': '0px'\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( gridItem.data( 'width' ) === 2 ) {\n\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t'width': columnWidth2 + 'px'\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t'width': columnWidth + 'px'\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'grid' === settings.type ) {\n\t\t\t\t\t\tgridItem.css( {\n\t\t\t\t\t\t\t'marginBottom': $gutter + 'px'\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMetro ) {\n\t\t\t\t\t\tvar $itemHeight;\n\n\t\t\t\t\t\tif ( gridItem.hasClass( 'grid-item-height' ) ) {\n\t\t\t\t\t\t\t$itemHeight = gridItem;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$itemHeight = gridItem.find( '.grid-item-height' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gridItem.data( 'height' ) === 2 ) {\n\t\t\t\t\t\t\t$itemHeight.css( {\n\t\t\t\t\t\t\t\t'height': columnHeight2 + 'px'\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else if ( gridItem.data( 'height' ) === 1.3 ) {\n\t\t\t\t\t\t\t$itemHeight.css( {\n\t\t\t\t\t\t\t\t'height': columnHeight13 + 'px'\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else if ( gridItem.data( 'height' ) === 0.7 ) {\n\t\t\t\t\t\t\t$itemHeight.css( {\n\t\t\t\t\t\t\t\t'height': columnHeight7 + 'px'\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$itemHeight.css( {\n\t\t\t\t\t\t\t\t'height': columnHeight + 'px'\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( plugin._isotopeOptions ) {\n\t\t\t\t\tplugin._isotopeOptions.packery.gutter = $gutter;\n\t\t\t\t\tplugin._isotopeOptions.fitRows.gutter = $gutter;\n\t\t\t\t\t$grid.isotope( plugin._isotopeOptions );\n\t\t\t\t}\n\n\t\t\t\t$grid.isotope( 'layout' );\n\t\t\t};\n\n\t\t\tthis.handlerEntranceAnimation = function() {\n\t\t\t\tvar $grid = $el.children( '.edumall-grid' );\n\n\t\t\t\t// Used find() for flex layout.\n\t\t\t\tvar items = $grid.find( '.grid-item' );\n\n\t\t\t\titems.elementorWaypoint( function() {\n\t\t\t\t\t// Fix for different ver of waypoints plugin.\n\t\t\t\t\tvar _self = this.element ? this.element : this;\n\t\t\t\t\tvar $self = $( _self );\n\t\t\t\t\t$self.addClass( 'animate' );\n\t\t\t\t}, {\n\t\t\t\t\toffset: '90%',\n\t\t\t\t\ttriggerOnce: true\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\tthis.handlerTooltips = function() {\n\t\t\t\tvar tooltipSettings = $el.data( 'power-tip' );\n\n\t\t\t\tif ( tooltipSettings && $.powerTip ) {\n\t\t\t\t\t$el.find( '.edumall-tooltip' ).each( function( i, o ) {\n\t\t\t\t\t\tvar target = $( this ).attr( 'data-tooltip' );\n\n\t\t\t\t\t\t$( this ).powerTip( {\n\t\t\t\t\t\t\tplacement: tooltipSettings.placement,\n\t\t\t\t\t\t\tpopupClass: tooltipSettings.popupClass,\n\t\t\t\t\t\t\tsmartPlacement: true,\n\t\t\t\t\t\t\tmouseOnToPopup: true,\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t$( this ).data( 'powertiptarget', target );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$.fn.EdumallGridLayout = function( methodOrOptions ) {\n\t\t\tvar method = (\n\t\t\t\ttypeof methodOrOptions === 'string'\n\t\t\t) ? methodOrOptions : undefined;\n\n\t\t\tif ( method ) {\n\t\t\t\tvar edumallGridLayouts = [];\n\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar $el = $( this );\n\t\t\t\t\tvar EdumallGridLayout = $el.data( 'EdumallGridLayout' );\n\n\t\t\t\t\tedumallGridLayouts.push( EdumallGridLayout );\n\t\t\t\t} );\n\n\t\t\t\tvar args = (\n\t\t\t\t\targuments.length > 1\n\t\t\t\t) ? Array.prototype.slice.call( arguments, 1 ) : undefined;\n\n\t\t\t\tvar results = [];\n\n\t\t\t\tthis.each( function( index ) {\n\t\t\t\t\tvar EdumallGridLayout = edumallGridLayouts[ index ];\n\n\t\t\t\t\tif ( ! EdumallGridLayout ) {\n\t\t\t\t\t\tconsole.warn( '$.EdumallGridLayout not instantiated yet' );\n\t\t\t\t\t\tconsole.info( this );\n\t\t\t\t\t\tresults.push( undefined );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof EdumallGridLayout[ method ] === 'function' ) {\n\t\t\t\t\t\tvar result = EdumallGridLayout[ method ].apply( EdumallGridLayout, args );\n\t\t\t\t\t\tresults.push( result );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn( 'Method \\'' + method + '\\' not defined in $.EdumallGridLayout' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn (\n\t\t\t\t\tresults.length > 1\n\t\t\t\t) ? results : results[ 0 ];\n\t\t\t} else {\n\t\t\t\tvar options = (\n\t\t\t\t\ttypeof methodOrOptions === 'object'\n\t\t\t\t) ? methodOrOptions : undefined;\n\n\t\t\t\treturn this.each( function() {\n\t\t\t\t\tvar $el = $( this );\n\t\t\t\t\tvar EdumallGridLayout = new EdumallGridPlugin( $el, options );\n\n\t\t\t\t\t$el.data( 'EdumallGridLayout', EdumallGridLayout );\n\n\t\t\t\t\tEdumallGridLayout.init();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t};\n\t}( jQuery )\n);\n"]}